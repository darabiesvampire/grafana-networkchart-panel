{"version":3,"sources":["../src/rendering.js"],"names":["link","scope","elem","attrs","ctrl","data","columns","panel","svgWrapper","highlight_text","tooltipEle","find","captionEle","theme","grafanaBootData","user","lightTheme","events","on","render","setElementHeight","height","row","_","isString","parseInt","replace","title","css","e","showError","errorText","noData","text","show","hide","addZoom","svg","select","call","d3","zoom","scale","event","transform","k","translate","x","y","attr","d","i","y_plus_5","addNetworkChart","width","color","scaleOrdinal","color_scale","noise","remove_noise","colorSelections","columnTexts","map","default_index1","color_regexp1","color_data_index1","default_index2","color_regexp2","color_data_index2","selector","first_color_selector","length","push","RegExp","first_color_regexp","indexOf","second_color_selector","combine_active","tooltip","style","showTooltip","transition","duration","html","pageX","pageY","hideTooltip","linkData","nodesData","reduce","all","value","id","source","target","allSources","allTargets","forEach","initHash","group","getGroup","combineMethod","combine_method","relations","currentRel","sourceFromTarget","hide_internal_relationships","param","relation1","relation2","linkUpdate","selectAll","exit","remove","enter","append","link_thickness","dynamic_thickness","Math","log","merge","maxValueLogged","max","index","default_index","regExp","selectorData","result","exec","undefined","uniqBy","nodeUpdate","nodeEnter","drag","dragstarted","dragged","dragended","radius","node_radius","simulation","forceSimulation","force","forceLink","strength","forceManyBody","forceCenter","nodes","ticked","links","captions","columnsSorted","sortBy","captionsUpdate","captionsEnter","colorTexts","checkHighlight","toLowerCase","alphaTarget","cx","cy","delay","prev_highlight_text","active","restart","fx","fy","hash","key","_error","renderingCompleted"],"mappings":"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","file":"rendering.js","sourcesContent":["import _ from 'lodash';\n//import * as d3 from 'd3';\n//import {event as currentEvent} from './d3-selection';\n\nexport default function link(scope, elem, attrs, ctrl) {\n  var data,columns, panel, svgWrapper, highlight_text ;\n  var tooltipEle = elem.find('.tooltip');\n  var captionEle = elem.find('.caption');\n\n  var theme = grafanaBootData.user.lightTheme ? '-light' : '-dark' ;\n\n  elem = elem.find('.networkchart-panel');\n\n\n  ctrl.events.on('render', function() {\n    render();\n  });\n\n  function setElementHeight() {\n    try {\n      var height = ctrl.height || panel.height || ctrl.row.height;\n      if (_.isString(height)) {\n        height = parseInt(height.replace('px', ''), 10);\n      }\n\n      height -= 5; // padding\n      height -= panel.title ? 24 : 9; // subtract panel title bar\n\n      elem.css('height', height + 'px');\n\n      return true;\n    } catch(e) { // IE throws errors sometimes\n      return false;\n    }\n  }\n\n\n  function showError(errorText) {\n    var noData = elem.find(\".no-data\");\n    if(errorText){\n      noData.text(errorText);\n      noData.show();\n    }\n    else\n      noData.hide();\n  }\n\n  function addZoom(svg){\n    svgWrapper = svg.select('.svg-wrapper');\n\n    svg.call(d3.zoom().on('zoom', function() {\n\n      var scale = d3.event.transform.k,\n      translate = [d3.event.transform.x, d3.event.transform.y];\n\n       svgWrapper.attr('transform', 'translate(' + translate[0] + ', ' + translate[1] + ') scale(' + scale + ')');\n   }));\n  }\n\n\n  function y(d,i){\n    return 25 * (i+1)\n  }\n\n  function y_plus_5(d,i){\n    return y(d,i) + 5\n  }\n\n  function addNetworkChart() {\n    if(typeof d3 == 'undefined')\n      return;\n\n    var width = elem.width();\n    var height = elem.height();\n\n    var color = d3.scaleOrdinal(d3[ctrl.panel.color_scale]);\n\n\n    var noise = ctrl.panel.remove_noise ? ctrl.panel.noise : 3;\n    \n    //************************ Init Caption and Colors Data *************************/\n    var colorSelections = {};\n    var columns = [];\n    var columnTexts = _.map(ctrl.columns,\"text\")\n\n    var default_index1;\n    var color_regexp1;\n    var color_data_index1 = null;\n    \n    var default_index2;\n    var color_regexp2;\n    var color_data_index2 = null;\n\n\n    var selector = ctrl.panel.first_color_selector;\n    if(selector === 'index'){\n      default_index1= columns.length; \n      columns.push(ctrl.columns[0])\n    }\n    else if(selector === 'regular expression')\n      color_regexp1 = new RegExp(ctrl.panel.first_color_regexp);\n    else\n      color_data_index1 =  columnTexts.indexOf(selector); \n\n\n    selector = ctrl.panel.second_color_selector;\n    if(selector === 'index'){\n      default_index2= columns.length;\n\n      if(!ctrl.panel.combine_active)\n        columns.push(ctrl.columns[1])\n    }\n    else if(selector === 'regular expression')\n      color_regexp2 = new RegExp(ctrl.panel.first_color_regexp);\n    else\n      color_data_index2 =  columnTexts.indexOf(selector);\n\n\n    //************************ Tooltips *************************/\n\n    var tooltip = d3.select(tooltipEle[0])\n                  .style(\"opacity\", 0);\n\n\n    function showTooltip(d) {    \n      tooltip.transition()\n          .duration(200)\n          .style(\"opacity\", .8);\n\n      tooltip.html(d.tooltip)  \n          .style(\"width\",  (d.tooltip.length * 7) + \"px\")\n          .style(\"left\",  (d3.event.pageX) + \"px\")   \n          .style(\"top\",   (d3.event.pageY - 28) + \"px\")\n      }\n\n\n      function hideTooltip(d) {\n          tooltip.transition()    \n              .duration(500)    \n              .style(\"opacity\", 0); \n      }\n\n\n    //************************ Main Graph *************************/\n  \n    var svg = d3.select(elem[0]);\n\n    addZoom(svg);\n\n\n    //************************ Links between nodes *************************/\n    var linkData = [];\n    var nodesData = [];\n\n    if(!ctrl.panel.combine_active){\n     linkData = _.reduce(data, (all,d) => {\n\n      var value = d[d.length-1];\n      //No value\n      if(!value || value < noise)\n        return all;\n\n          all.push({\n              id: d[0] + d[1], \n              source: d[0],\n              target: d[1],\n              value:  value,\n              tooltip: d[0]+ ' <=> ' + d[1] + '<br>' + value\n            });\n        return all;\n      }\n      , []);\n    }\n    else\n    {\n      var allSources= {};\n      var allTargets= {};\n\n      _.forEach(data, d => {\n\n        var value = d[d.length-1];\n        //No value\n        if(!value || value < noise)\n          return ;\n\n        var source = d[0];\n        var target = d[1];\n\n        initHash(allSources, source);\n        initHash(allTargets, target);\n\n        allSources[source][target] = value;\n        allTargets[target][source] = value;\n\n        if(color_data_index1 !== null || color_regexp1)\n          allSources[source].group = getGroup(d,0);  \n      });\n\n      var combineMethod = _[ctrl.panel.combine_method];\n\n      var relations = {};\n\n      for (var source in allSources) {\n\n        initHash(relations,source);\n        var currentRel = relations[source];\n\n        for (var target in allSources[source]) {\n\n          var value = allSources[source][target];\n\n          for (var sourceFromTarget in allTargets[target]) {\n\n            //Already calculated at the other end\n            if(relations[sourceFromTarget]) continue;\n\n            if(ctrl.panel.hide_internal_relationships && allSources[source].group === allSources[sourceFromTarget].group )\n                continue;\n\n            if(!currentRel[sourceFromTarget]) currentRel[sourceFromTarget] = 0;\n\n            var param = [value , allTargets[target][sourceFromTarget] ];\n            currentRel[sourceFromTarget] += combineMethod(param);\n          }\n        }\n      }\n\n      for (var relation1 in relations) {\n        for (var relation2 in relations[relation1]) {\n\n          var value = relations[relation1][relation2];\n\n          linkData.push({\n                id: relation1 + relation2, \n                source: relation1,\n                target: relation2,\n                value:  value,\n                tooltip: relation1+ ' <=> ' + relation2 + '<br>' + value\n              });\n\n          nodesData.push({\n            id: relation1 ,\n            group: allSources[relation1].group,\n            tooltip: relation1\n          });\n\n          nodesData.push({\n            id: relation2 ,\n            group: allSources[relation2].group ,\n            tooltip: relation2\n          });\n\n        }\n      }\n    }\n\n\n    var linkUpdate = svg.select(\".links\")\n                    .selectAll(\"line\")\n                    .data(linkData, d => d.id);\n\n    // EXIT\n    // Remove old elements as needed.\n    linkUpdate.exit().remove();\n\n    // ENTER\n    // Create new elements as needed.  \n    var enter = linkUpdate.enter().append(\"line\")\n                .attr(\"class\", \"line\"+theme)\n                .on(\"mouseover\", showTooltip)\n                .on(\"mouseout\", hideTooltip)\n\n    /*\n    enter    \n      .append(\"title\")\n      .text(d => d.id)\n    */\n\n    var link_thickness = ctrl.panel.link_thickness;\n\n    if(ctrl.panel.dynamic_thickness)\n      link_thickness = d => Math.log(d.value)\n\n    // ENTER + UPDATE\n    linkUpdate =linkUpdate.merge(enter)\n                //.selectAll(\"line\")\n                .attr(\"stroke-width\", link_thickness );\n\n\n    var maxValueLogged = _.reduce(linkData, (max, d) =>{\n      var log = Math.log(d.value);\n      if(log > max)\n        return log;\n\n      return max;\n    },0);\n\n    //************************ NODES *************************/\n    function getGroup(d,index ){\n      var group;\n      var default_index = index === 0 ? default_index1 : default_index2;\n      var selector = index === 0 ? color_data_index1 : color_data_index2;\n      var regExp = index === 0 ? color_regexp1 : color_regexp2;\n      \n      var selectorData ;\n      \n      if(selector !== null)\n        selectorData = d[selector];\n\n      if(regExp){\n        var result =regExp.exec(d[index]);\n\n        if(result.length)\n          selectorData = result[result.length-1];\n      }\n\n      if(selectorData){\n        group = colorSelections[selectorData];\n        if(group === undefined)\n        {\n          group = colorSelections[selectorData] = columns.length;\n          columns.push({\n            text: selectorData\n          });\n        }\n      }\n      else\n        group = default_index;\n\n      return group;\n    }\n\n\n\n    if(!ctrl.panel.combine_active)\n      nodesData = _.reduce(data, (all,d) => {\n\n        var value = d[d.length-1];\n        //No value\n        if(!value || value < noise)\n          return all;\n\n        all.push({\n            id: d[0], \n            group: getGroup(d, 0),\n            tooltip: d[0]\n          }); //columns[i].text\n\n\n        all.push({\n            id: d[1], \n            group: getGroup(d, 1),\n            tooltip: d[1]\n          }); //columns[i].text\n            \n          return all;\n        }\n        , []);\n\n    nodesData = _.uniqBy(nodesData, d => d.id);\n\n\n    var nodeUpdate = svg.select(\".nodes\")\n                    .selectAll('circle')\n                    .data(nodesData, d => d.id + '-node');\n\n    // EXIT\n    // Remove old elements as needed.\n    nodeUpdate.exit().remove();\n\n    // ENTER\n    // Create new elements as needed.  \n    var nodeEnter = nodeUpdate.enter().append(\"circle\")\n              .on(\"mouseover\", showTooltip)\n              .on(\"mouseout\", hideTooltip)\n              .call(d3.drag()\n                .on(\"start\", dragstarted)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragended));\n\n\n    /*                    \n    nodeEnter   \n        .append(\"title\")\n        .text(d => d.id);\n    */\n\n    var radius = ctrl.panel.node_radius\n\n\n    // ENTER + UPDATE\n    nodeUpdate = nodeUpdate.merge(nodeEnter)\n      //.selectAll(\"circle\")\n      .attr(\"r\", radius) // TODO use cummulative value for this\n      .attr(\"fill\", d => d.group ? color(d.group) : color(0) )\n\n\n\n    var simulation = d3.forceSimulation()\n      .force(\"link\", d3.forceLink()\n        .id(d => d.id) \n        .strength(d => { \n\n        if(!d.value)\n          return 0.01;\n\n        var strength = Math.log(d.value)/maxValueLogged;\n        if(strength < 0.01)\n          return 0.01;\n\n        return strength;\n        })\n      )\n      .force(\"charge\", d3.forceManyBody())\n      .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\n    simulation\n      .nodes(nodesData)\n      .on(\"tick\", ticked);\n\n    simulation.force(\"link\")\n          .links(linkData);\n\n\n    //************************ Add Caption Colors *************************/\n    var captions = d3.select(captionEle[0]);\n\n    var columnsSorted = _.sortBy(columns,\"text\")\n    \n    var captionsUpdate = captions.selectAll(\"g\")\n                        .data(columnsSorted, (d,i) => d.text+i);\n\n    // EXIT\n    // Remove old elements as needed.\n    captionsUpdate.exit().remove();\n\n    // ENTER\n    // Create new elements as needed.  \n    var captionsEnter = captionsUpdate.enter()\n                        .append(\"g\");\n\n\n    captionsEnter\n      .append(\"circle\")\n      .attr(\"r\", 10)\n      .attr(\"cx\", 15)\n      .attr(\"cy\", y)\n\n\n    captionsEnter\n      .append(\"text\")\n      .attr(\"class\", \"captions-text\" + theme)\n      .attr(\"x\", 25)\n      .attr(\"y\", y_plus_5);\n\n    \n    var colorTexts = _.map(columns,\"text\")\n\n    // ENTER + UPDATE\n    captionsUpdate.merge(captionsEnter)\n      .selectAll('circle')\n      //.attr(\"fill\", (d,i) => color(i)  )\n      .attr(\"fill\", d => color( colorTexts.indexOf(d.text))  )\n\n\n\n    captionsUpdate.merge(captionsEnter)\n      .selectAll('text')\n      .text(d => d.text);\n\n\n\n    function checkHighlight(d) {\n      return d.tooltip.toLowerCase().indexOf(highlight_text) !== -1\n    }\n\n    if(ctrl.highlight_text) {\n\n      highlight_text = ctrl.highlight_text.toLowerCase()\n\n      //stop simiulation\n      simulation.alphaTarget(0);\n\n      var cx,cy;\n\n      nodeUpdate\n        .transition()\n        .duration(1000)  \n        .delay(2000) \n        .attr(\"r\", d => checkHighlight(d) ? radius*7 : radius)\n        .attr(\"stroke\", d => checkHighlight(d) ? \"lightblue\" : \"\")\n        .attr(\"stroke-width\", d => checkHighlight(d) ? 2 : \"\")\n        .transition()\n        .duration(1000)  \n        .delay(1000) \n        .attr(\"r\", radius)\n\n\n\n    }\n    else if(ctrl.prev_highlight_text)\n    {\n      nodeUpdate\n      .attr(\"stroke\", \"\")\n      .attr(\"stroke-width\", \"\")\n    }\n\n\n\n    function ticked() {\n      linkUpdate\n          .attr(\"x1\", function(d) { return d.source.x; })\n          .attr(\"y1\", function(d) { return d.source.y; })\n          .attr(\"x2\", function(d) { return d.target.x; })\n          .attr(\"y2\", function(d) { return d.target.y; });\n\n      nodeUpdate\n          .attr(\"cx\", function(d) { return d.x; })\n          .attr(\"cy\", function(d) { return d.y; });\n    }\n\n    function dragstarted(d) {\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function dragged(d) {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    }\n\n    function dragended(d) {\n      if (!d3.event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n\n    function initHash(hash,key) {\n      if (!hash[key])\n        hash[key]= {};\n    }\n\n  }\n\n\n  function render() {\n    data = ctrl.data;\n    columns = ctrl.columns;\n    panel = ctrl.panel;\n\n    if (setElementHeight())\n\n      if(ctrl._error || !data || !data.length)\n      {\n\n        showError(ctrl._error || \"No data points\");\n        \n        data = [];\n        addNetworkChart();\n\n      }\n      else\n      {\n        addNetworkChart();\n        showError(false);  \n      }\n\n    \n    ctrl.renderingCompleted();\n  }\n}\n\n"]}