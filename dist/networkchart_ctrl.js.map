{"version":3,"sources":["../src/networkchart_ctrl.js"],"names":["MetricsPanelCtrl","_","rendering","NetworkChartCtrl","$scope","$injector","$rootScope","$interpolate","$sanitize","templateSrv","detangleSrv","panelDefaults","color_scale","first_color_selector","first_color_regexp","second_color_selector","second_color_regexp","combine_active","combine_method","dynamic_radius","node_radius","square_side_length","dynamic_thickness","link_thickness","link_distance","hide_internal_relationships","remove_noise","noise","nodes_remove_noise","nodes_noise","first_filter_minumum_number_of_links","second_filter_minumum_number_of_links","defaults","panel","events","on","onDataReceived","bind","onDataError","onInitEditMode","addEditorTab","columnMap","columns","data","render","values","selectors","map","splice","concat","length","text","dataList","_error","type","first_term_tooltip","combine_to_show","second_term_tooltip","minFiles","replaceWithText","scopedVars","trim","shouldApplyMinFiles","minIssues","shouldApplyMinIssues","dataFilter","getCustomConfig","rows","scope","elem","attrs","ctrl","prev_highlight_text","highlight_text","value","isNaN","x","parseFloat","templateUrl"],"mappings":"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","file":"networkchart_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport rendering from './rendering';\n\nexport class NetworkChartCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $rootScope, $interpolate, $sanitize, templateSrv, detangleSrv) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n    this.$interpolate = $interpolate;\n    this.$sanitize = $sanitize;\n    this.templateSrv = templateSrv;\n    this.detangleSrv = detangleSrv;\n    var panelDefaults = {\n      color_scale : \"schemeCategory10\",\n      first_color_selector : \"index\",\n      first_color_regexp : \"(.+?)\\\\/\",\n\n      second_color_selector: \"index\",\n      second_color_regexp : \"(.+?)\\\\/\",\n      \n      combine_active : false,\n      combine_method : \"min\",\n\n      dynamic_radius : false,\n      node_radius : 5,\n      square_side_length: 10,\n\n      dynamic_thickness : true,\n      link_thickness : 1,\n\n      link_distance: 20,\n\n      hide_internal_relationships: false,\n      \n      remove_noise : false,\n      noise : 0,\n\n\n      nodes_remove_noise : false,\n      nodes_noise : 0,\n\n      first_filter_minumum_number_of_links : 0,\n      second_filter_minumum_number_of_links: 0\n\n    };\n\n    _.defaults(this.panel, panelDefaults);\n\n    //this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/grafana-networkchart-panel/editor.html', 2);\n  }\n\n\n  onDataError() {\n    this.columnMap = [];\n    this.columns = [];\n    this.data = [];\n    this.render();\n  }\n\n\n  colorSelectOptions(){\n    var values = [\"index\",\"regular expression\"];\n\n    if(!this.columns)\n      return[];\n\n    var selectors = _.map(this.columns,\"text\");\n\n    selectors.splice(-1);\n    \n    return values.concat(selectors);\n  }\n\n  combineOptions(){\n    if(!this.columns || this.columns.length < 2)\n      return[];\n\n    return [\n      this.columns[0].text ,\n      this.columns[1].text ,\n      ];\n  }\n\n\n  /*\n  onRender() {\n    this.data = this.parsecolumnMap(this.columnMap);\n  }\n  */\n\n  onDataReceived(dataList) {\n    let data = dataList[0];\n\n    if(!data)\n    {\n      this._error = \"No data points.\";\n      return this.render();\n    }\n\n    if(data.type !== \"table\")\n    {\n      this._error = \"Should be table fetch. Use terms only.\";\n      return this.render();\n    }\n\n    this._error = null;\n\n    this.columnMap = data.columnMap; \n    this.columns = data.columns; \n\n    if(! this.panel.first_term_tooltip &&  this.columns[0])\n    {\n     this.panel.first_term_tooltip=  \"{{\" + this.columns[0].text + \"}}\";\n    }\n\n\n    if(! this.panel.combine_to_show &&  this.columns[0])\n    {\n     this.panel.combine_to_show=  this.columns[0].text;\n    }\n\n\n    if(! this.panel.second_term_tooltip &&  this.columns[1])\n    {\n     this.panel.second_term_tooltip=  \"{{\" + this.columns[1].text + \"}}\";\n    }\n    if(this.columns && this.columns.length >= 2) {\n      let minFiles = this.templateSrv.replaceWithText('$min_files', this.panel.scopedVars);\n      if (minFiles) {\n         minFiles = minFiles.trim();\n      }\n      let shouldApplyMinFiles = minFiles !== \"\" && minFiles !== '-' && minFiles !== '$min_files';\n      if (shouldApplyMinFiles) {\n        this.panel.first_filter_minumum_number_of_links = minFiles;\n      }\n      else {\n        this.panel.first_filter_minumum_number_of_links = 0;\n      }\n\n      let minIssues = this.templateSrv.replaceWithText('$min_issues', this.panel.scopedVars);\n      if (minIssues) {\n        minIssues = minIssues.trim();\n      }\n      let shouldApplyMinIssues = minIssues !== \"\" && minIssues !== '-' && minIssues !== '$min_issues';\n      if (shouldApplyMinIssues) {\n        this.panel.second_filter_minumum_number_of_links = minIssues;\n      }\n      else {\n        this.panel.second_filter_minumum_number_of_links = 0;\n      }\n\n    }\n    this.data = this.detangleSrv.dataFilter(dataList, this.detangleSrv.getCustomConfig(this.templateSrv, this.panel))[0].rows;\n    this.render(this.data);\n  }\n\n\n  link(scope, elem, attrs, ctrl) {\n    rendering(scope, elem, attrs, ctrl);\n  }\n\n\n  highlight(){\n    this.render(); \n    this.prev_highlight_text =  this.highlight_text;\n  }\n\n  isInt(value) {\n    // tslint:disable-next-line:no-bitwise\n    return !isNaN(value) && (function (x) { return (x | 0) === x; })(parseFloat(value));\n  }\n}\n\nNetworkChartCtrl.templateUrl = 'module.html';\n"]}